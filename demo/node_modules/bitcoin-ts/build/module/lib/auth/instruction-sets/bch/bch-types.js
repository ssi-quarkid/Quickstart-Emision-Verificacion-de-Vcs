import { hexToBin, swapEndianness } from '../../../format/format';
import { getBitcoinTransactionId, serializeTransaction, } from '../../../transaction';
export var ConsensusBCH;
(function (ConsensusBCH) {
    ConsensusBCH[ConsensusBCH["schnorrSignatureLength"] = 64] = "schnorrSignatureLength";
})(ConsensusBCH || (ConsensusBCH = {}));
export const createTestAuthenticationProgramBCH = ({ lockingBytecode, satoshis = 0, sha256, unlockingBytecode, }) => {
    const testFundingTransaction = {
        inputs: [
            {
                outpointIndex: 0xffffffff,
                outpointTransactionHash: hexToBin('0000000000000000000000000000000000000000000000000000000000000000'),
                sequenceNumber: 0xffffffff,
                unlockingBytecode: Uint8Array.of(0, 0),
            },
        ],
        locktime: 0,
        outputs: [{ lockingBytecode, satoshis }],
        version: 1,
    };
    const testSpendingTransaction = {
        inputs: [
            {
                outpointIndex: 0,
                outpointTransactionHash: hexToBin(swapEndianness(getBitcoinTransactionId(serializeTransaction(testFundingTransaction), sha256))),
                sequenceNumber: 0xffffffff,
                unlockingBytecode,
            },
        ],
        locktime: 0,
        outputs: [{ lockingBytecode: Uint8Array.of(), satoshis }],
        version: 1,
    };
    return {
        inputIndex: 0,
        sourceOutput: testFundingTransaction.outputs[0],
        spendingTransaction: testSpendingTransaction,
    };
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmNoLXR5cGVzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vc3JjL2xpYi9hdXRoL2luc3RydWN0aW9uLXNldHMvYmNoL2JjaC10eXBlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBQUUsUUFBUSxFQUFFLGNBQWMsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQ2xFLE9BQU8sRUFDTCx1QkFBdUIsRUFDdkIsb0JBQW9CLEdBRXJCLE1BQU0sc0JBQXNCLENBQUM7QUFTOUIsTUFBTSxDQUFOLElBQVksWUFFWDtBQUZELFdBQVksWUFBWTtJQUN0QixvRkFBMkIsQ0FBQTtBQUM3QixDQUFDLEVBRlcsWUFBWSxLQUFaLFlBQVksUUFFdkI7QUFZRCxNQUFNLENBQUMsTUFBTSxrQ0FBa0MsR0FBRyxDQUFDLEVBQ2pELGVBQWUsRUFDZixRQUFRLEdBQUcsQ0FBQyxFQUNaLE1BQU0sRUFDTixpQkFBaUIsR0FNbEIsRUFBRSxFQUFFO0lBQ0gsTUFBTSxzQkFBc0IsR0FBZ0I7UUFDMUMsTUFBTSxFQUFFO1lBQ047Z0JBQ0UsYUFBYSxFQUFFLFVBQVU7Z0JBQ3pCLHVCQUF1QixFQUFFLFFBQVEsQ0FDL0Isa0VBQWtFLENBQ25FO2dCQUNELGNBQWMsRUFBRSxVQUFVO2dCQUMxQixpQkFBaUIsRUFBRSxVQUFVLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUM7YUFDdkM7U0FDRjtRQUNELFFBQVEsRUFBRSxDQUFDO1FBQ1gsT0FBTyxFQUFFLENBQUMsRUFBRSxlQUFlLEVBQUUsUUFBUSxFQUFFLENBQUM7UUFDeEMsT0FBTyxFQUFFLENBQUM7S0FDWCxDQUFDO0lBQ0YsTUFBTSx1QkFBdUIsR0FBZ0I7UUFDM0MsTUFBTSxFQUFFO1lBQ047Z0JBQ0UsYUFBYSxFQUFFLENBQUM7Z0JBQ2hCLHVCQUF1QixFQUFFLFFBQVEsQ0FDL0IsY0FBYyxDQUNaLHVCQUF1QixDQUNyQixvQkFBb0IsQ0FBQyxzQkFBc0IsQ0FBQyxFQUM1QyxNQUFNLENBQ1AsQ0FDRixDQUNGO2dCQUNELGNBQWMsRUFBRSxVQUFVO2dCQUMxQixpQkFBaUI7YUFDbEI7U0FDRjtRQUNELFFBQVEsRUFBRSxDQUFDO1FBQ1gsT0FBTyxFQUFFLENBQUMsRUFBRSxlQUFlLEVBQUUsVUFBVSxDQUFDLEVBQUUsRUFBRSxFQUFFLFFBQVEsRUFBRSxDQUFDO1FBQ3pELE9BQU8sRUFBRSxDQUFDO0tBQ1gsQ0FBQztJQUNGLE9BQU87UUFDTCxVQUFVLEVBQUUsQ0FBQztRQUNiLFlBQVksRUFBRSxzQkFBc0IsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO1FBQy9DLG1CQUFtQixFQUFFLHVCQUF1QjtLQUM3QyxDQUFDO0FBQ0osQ0FBQyxDQUFDIn0=