"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
/* eslint-disable functional/no-expression-statement */
const path_1 = require("path");
const plugin_alias_1 = __importDefault(require("@rollup/plugin-alias"));
const ava_1 = __importDefault(require("ava"));
const puppeteer_1 = require("puppeteer");
const rollup_1 = require("rollup");
const rollup_plugin_commonjs_1 = __importDefault(require("rollup-plugin-commonjs"));
const rollup_plugin_node_resolve_1 = __importDefault(require("rollup-plugin-node-resolve"));
const prepareCode = async () => {
    // eslint-disable-next-line no-console
    const realConsoleWarn = console.warn;
    /**
     * Suppress Rollup warning:
     * `Use of eval is strongly discouraged, as it poses security risks and may cause issues with minification`
     */
    // eslint-disable-next-line no-console, functional/immutable-data
    console.warn = (suppress) => suppress;
    const bundle = await rollup_1.rollup({
        // eslint-disable-next-line no-undef
        input: path_1.join(__dirname, 'hash.browser.bench.helper.js'),
        plugins: [
            plugin_alias_1.default({
                entries: {
                    chuhai: './../../../bench/chuhai.js',
                    'hash.js': './../../../bench/hash.js',
                },
            }),
            rollup_plugin_commonjs_1.default(),
            rollup_plugin_node_resolve_1.default(),
        ],
    });
    // eslint-disable-next-line no-console, require-atomic-updates, functional/immutable-data
    console.warn = realConsoleWarn;
    const result = await bundle.generate({
        format: 'esm',
    });
    return result.output[0].code;
};
const preparePage = async () => {
    const browser = await puppeteer_1.launch({
        args: ['--no-sandbox', '--disable-setuid-sandbox'],
    });
    const page = await browser.newPage();
    // https://github.com/GoogleChrome/puppeteer/issues/2301#issuecomment-379622459
    await page.goto('file:///');
    return { browser, page };
};
(async () => {
    const [code, { browser, page }] = await Promise.all([
        prepareCode(),
        preparePage(),
    ]);
    ava_1.default(`# browser: ${await browser.version()}`, async (t) => {
        page.on('console', (msg) => {
            // eslint-disable-next-line no-console
            console.log(msg.text());
        });
        page.on('error', (err) => {
            // eslint-disable-next-line no-console
            console.error(`error: ${String(err)}`);
        });
        // cspell: disable-next-line
        page.on('pageerror', (err) => {
            // eslint-disable-next-line no-console
            console.error(`pageerror: ${String(err)}`); // cspell: disable-line
        });
        // eslint-disable-next-line @typescript-eslint/no-misused-promises, no-async-promise-executor
        await new Promise(async (resolve) => {
            await page.exposeFunction('benchError', (error) => {
                // eslint-disable-next-line no-console
                console.error(error);
            });
            await page.exposeFunction('benchComplete', async () => {
                // eslint-disable-next-line no-console
                console.log('Browser benchmark complete, closing browser.');
                await browser.close();
                t.pass();
                resolve();
            });
            await page.setContent(`<script type="module">${code}</script>`);
        });
    });
})().catch((err) => {
    // eslint-disable-next-line no-console
    console.error(err);
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGFzaC5icm93c2VyLmJlbmNoLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2xpYi9jcnlwdG8vaGFzaC5icm93c2VyLmJlbmNoLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsdURBQXVEO0FBQ3ZELCtCQUE0QjtBQUU1Qix3RUFBeUM7QUFDekMsOENBQXVCO0FBQ3ZCLHlDQUFtQztBQUNuQyxtQ0FBZ0M7QUFDaEMsb0ZBQThDO0FBQzlDLDRGQUFxRDtBQUVyRCxNQUFNLFdBQVcsR0FBRyxLQUFLLElBQUksRUFBRTtJQUM3QixzQ0FBc0M7SUFDdEMsTUFBTSxlQUFlLEdBQUcsT0FBTyxDQUFDLElBQUksQ0FBQztJQUNyQzs7O09BR0c7SUFDSCxpRUFBaUU7SUFDakUsT0FBTyxDQUFDLElBQUksR0FBRyxDQUFDLFFBQWdCLEVBQUUsRUFBRSxDQUFDLFFBQVEsQ0FBQztJQUU5QyxNQUFNLE1BQU0sR0FBRyxNQUFNLGVBQU0sQ0FBQztRQUMxQixvQ0FBb0M7UUFDcEMsS0FBSyxFQUFFLFdBQUksQ0FBQyxTQUFTLEVBQUUsOEJBQThCLENBQUM7UUFDdEQsT0FBTyxFQUFFO1lBQ1Asc0JBQUssQ0FBQztnQkFDSixPQUFPLEVBQUU7b0JBQ1AsTUFBTSxFQUFFLDRCQUE0QjtvQkFDcEMsU0FBUyxFQUFFLDBCQUEwQjtpQkFDdEM7YUFDRixDQUFDO1lBQ0YsZ0NBQVEsRUFBRTtZQUNWLG9DQUFXLEVBQUU7U0FDZDtLQUNGLENBQUMsQ0FBQztJQUNILHlGQUF5RjtJQUN6RixPQUFPLENBQUMsSUFBSSxHQUFHLGVBQWUsQ0FBQztJQUUvQixNQUFNLE1BQU0sR0FBRyxNQUFNLE1BQU0sQ0FBQyxRQUFRLENBQUM7UUFDbkMsTUFBTSxFQUFFLEtBQUs7S0FDZCxDQUFDLENBQUM7SUFDSCxPQUFPLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDO0FBQy9CLENBQUMsQ0FBQztBQUVGLE1B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