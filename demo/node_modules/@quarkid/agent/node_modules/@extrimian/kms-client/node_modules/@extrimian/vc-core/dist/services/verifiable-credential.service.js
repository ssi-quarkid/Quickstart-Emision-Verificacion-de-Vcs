"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.VerifiableCredentialService = void 0;
var verifiable_credential_1 = require("../models/verifiable-credential");
var jsonld = require("jsonld");
var VerifiableCredentialService = /** @class */ (function () {
    function VerifiableCredentialService() {
    }
    VerifiableCredentialService.prototype.createCredential = function (params) {
        return __awaiter(this, void 0, void 0, function () {
            var vc, compacted;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        vc = new verifiable_credential_1.VerifiableCredential({
                            "@context": params.context,
                            issuer: params.vcInfo.issuer,
                            expirationDate: params.vcInfo.expirationDate,
                            id: params.vcInfo.id,
                            issuanceDate: params.vcInfo.issuanceDate,
                            credentialSubject: this.mapDataWithRules(params.data, params.mappingRules),
                            credentialStatus: params.vcInfo.credentialStatus,
                            credentialSchema: params.vcInfo.credentialSchema,
                            refreshService: params.vcInfo.refreshService,
                        });
                        vc.type = params.vcInfo.types;
                        if (vc.type.indexOf("VerifiableCredential") == -1) {
                            vc.type.push("VerifiableCredential");
                        }
                        return [4 /*yield*/, jsonld.compact(vc, vc["@context"])];
                    case 1:
                        compacted = _a.sent();
                        return [2 /*return*/, compacted];
                }
            });
        });
    };
    VerifiableCredentialService.prototype.verify = function (vc) {
    };
    VerifiableCredentialService.prototype.mapDataWithRules = function (data, mappingRules) {
        if (!mappingRules) {
            return data;
        }
        var schemaObject = {};
        for (var prop in mappingRules) {
            this.mapProperty(schemaObject, prop, data, mappingRules[prop]);
        }
        return schemaObject;
    };
    VerifiableCredentialService.prototype.mapProperty = function (schemaObjectProperty, schemaPropertyName, modelObjectProperty, modelPropertyName) {
        var modelField = this.getModelValue(modelObjectProperty, modelPropertyName);
        this.setSchemaValue(schemaObjectProperty, schemaPropertyName, modelField);
    };
    VerifiableCredentialService.prototype.getModelValue = function (obj, path) {
        path = path.split(':');
        var current = obj;
        while (path.length) {
            if (typeof current !== 'object')
                return undefined;
            current = current[path.shift()];
        }
        return current;
    };
    VerifiableCredentialService.prototype.setSchemaValue = function (obj, path, value) {
        path = path.split(':');
        var current = obj;
        while (path.length) {
            if (path.length == 1) {
                current[path.shift()] = value;
            }
            else {
                var prop = path.shift();
                if (current[prop] === undefined) {
                    current[prop] = {};
                }
                current = current[prop];
            }
        }
        return current;
    };
    return VerifiableCredentialService;
}());
exports.VerifiableCredentialService = VerifiableCredentialService;
//# sourceMappingURL=verifiable-credential.service.js.map