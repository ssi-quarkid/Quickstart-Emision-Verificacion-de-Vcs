import { SendMessageParams } from './inbox-sender';
import { Entry, MessageDescriptor } from '../types/message';
import { MessageStorage } from '../types/message-storage';
export { SendMessageParams } from './inbox-sender';
export interface DWNClientConfig {
    did: string;
    inboxURL: string;
    storage: MessageStorage;
}
export declare class DWNClient {
    private readonly consumer;
    private readonly sender;
    private readonly emitter;
    private readonly storage;
    constructor(config: DWNClientConfig);
    private checkOutLastPullDate;
    addSubscriber<T = any>(callback: (messages: Entry[]) => Promise<T>): void;
    pullNewMessageWait(): Promise<void>;
    pullNewMessages(): Promise<void>;
    getMessages(filters: Omit<MessageDescriptor, 'cid' | 'method'>): Promise<Entry[]>;
    sendMessage(params: SendMessageParams): Promise<void>;
}
