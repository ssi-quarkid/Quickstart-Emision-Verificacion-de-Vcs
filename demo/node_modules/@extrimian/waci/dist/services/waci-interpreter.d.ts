import { InputCallbacks } from '../callbacks';
import { WACIMessage, GoalCode, Actor, CredentialManifest, CredentialFulfillment, WACIResponse } from '../types';
export declare class WACIInterpreter {
    private readonly enabledActors;
    constructor();
    setUpFor<T extends Actor>(params: InputCallbacks[T], actor: T): WACIInterpreter;
    isWACIMessage(messageToCheck: any): messageToCheck is WACIMessage;
    createOOBInvitation(senderDID: string, goalCode: GoalCode, body?: {}): Promise<WACIMessage>;
    createOfferCredentialMessage(issuerDID: string, holderDID: string, manifest: CredentialManifest, fulfillment: CredentialFulfillment): Promise<WACIMessage>;
    processMessage(messageThread: WACIMessage[]): Promise<WACIResponse | void>;
}
