"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __asyncValues = (this && this.__asyncValues) || function (o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.validateVcByInputDescriptor = exports.extractExpectedChallenge = exports.verifyPresentation = exports.createUUID = exports.getObjectValues = void 0;
var UUID = require("uuid");
var jsonpath = require("jsonpath");
var jsonschema = require("jsonschema");
var erros_1 = require("./erros");
var getObjectValues = function (object) {
    return Object.values(object);
};
exports.getObjectValues = getObjectValues;
exports.createUUID = UUID.v4;
var verifyPresentation = function (presentationDefinition, credentialApplication, verificationCallback) { return __awaiter(void 0, void 0, void 0, function () {
    var vcs, _loop_1, _a, _b, _c, state_1, e_1_1, error_1;
    var _d, e_1, _e, _f;
    var _g;
    return __generator(this, function (_h) {
        switch (_h.label) {
            case 0:
                _h.trys.push([0, 14, , 15]);
                vcs = [];
                _h.label = 1;
            case 1:
                _h.trys.push([1, 7, 8, 13]);
                _loop_1 = function () {
                    var inputDescriptor, vcInput, vc, _i, _j, field, fieldValue, errors;
                    return __generator(this, function (_k) {
                        switch (_k.label) {
                            case 0:
                                _f = _c.value;
                                _a = false;
                                _k.label = 1;
                            case 1:
                                _k.trys.push([1, , 3, 4]);
                                inputDescriptor = _f;
                                vcInput = credentialApplication.data.json.presentation_submission.descriptor_map.find(function (descriptor) { return inputDescriptor.id === descriptor.id; });
                                if (!vcInput)
                                    return [2 /*return*/, { value: new erros_1.InputDescriptorError() }];
                                vc = jsonpath.query(credentialApplication.data.json, vcInput.path)[0];
                                vcs.push(vc);
                                // Verify fields
                                // TODO - use jsonschema instead
                                for (_i = 0, _j = inputDescriptor.constraints.fields; _i < _j.length; _i++) {
                                    field = _j[_i];
                                    fieldValue = (_g = jsonpath.query(vc, field.path[0])) === null || _g === void 0 ? void 0 : _g[0];
                                    if (!fieldValue)
                                        new erros_1.InputDescriptorError();
                                    if (field.filter) {
                                        errors = jsonschema.validate(fieldValue, field.filter).errors;
                                        if (errors.length)
                                            new erros_1.InputDescriptorError();
                                    }
                                }
                                // Verify proof
                                return [4 /*yield*/, verificationCallback(vc)];
                            case 2:
                                // Verify proof
                                _k.sent();
                                return [3 /*break*/, 4];
                            case 3:
                                _a = true;
                                return [7 /*endfinally*/];
                            case 4: return [2 /*return*/];
                        }
                    });
                };
                _a = true, _b = __asyncValues(presentationDefinition.input_descriptors);
                _h.label = 2;
            case 2: return [4 /*yield*/, _b.next()];
            case 3:
                if (!(_c = _h.sent(), _d = _c.done, !_d)) return [3 /*break*/, 6];
                return [5 /*yield**/, _loop_1()];
            case 4:
                state_1 = _h.sent();
                if (typeof state_1 === "object")
                    return [2 /*return*/, state_1.value];
                _h.label = 5;
            case 5: return [3 /*break*/, 2];
            case 6: return [3 /*break*/, 13];
            case 7:
                e_1_1 = _h.sent();
                e_1 = { error: e_1_1 };
                return [3 /*break*/, 13];
            case 8:
                _h.trys.push([8, , 11, 12]);
                if (!(!_a && !_d && (_e = _b.return))) return [3 /*break*/, 10];
                return [4 /*yield*/, _e.call(_b)];
            case 9:
                _h.sent();
                _h.label = 10;
            case 10: return [3 /*break*/, 12];
            case 11:
                if (e_1) throw e_1.error;
                return [7 /*endfinally*/];
            case 12: return [7 /*endfinally*/];
            case 13: return [2 /*return*/, {
                    result: true,
                    vcs: vcs
                }];
            case 14:
                error_1 = _h.sent();
                console.error(error_1);
                return [2 /*return*/, {
                        result: false,
                        error: error_1
                    }];
            case 15: return [2 /*return*/];
        }
    });
}); };
exports.verifyPresentation = verifyPresentation;
var extractExpectedChallenge = function (presentationDefinitionMessage) {
    return presentationDefinitionMessage.attachments.find(function (attachment) { var _a, _b, _c; return (_c = (_b = (_a = attachment === null || attachment === void 0 ? void 0 : attachment.data) === null || _a === void 0 ? void 0 : _a.json) === null || _b === void 0 ? void 0 : _b.options) === null || _c === void 0 ? void 0 : _c.challenge; }).data.json.options.challenge;
};
exports.extractExpectedChallenge = extractExpectedChallenge;
var validateVcByInputDescriptor = function (vc, inputDescriptor) {
    var _a;
    for (var _i = 0, _b = inputDescriptor.constraints.fields; _i < _b.length; _i++) {
        var field = _b[_i];
        var fieldValues = (_a = field.path) === null || _a === void 0 ? void 0 : _a.map(function (path) {
            return jsonpath.value(vc, path);
        });
        for (var _c = 0, fieldValues_1 = fieldValues; _c < fieldValues_1.length; _c++) {
            var value = fieldValues_1[_c];
            if (!value)
                return false;
            if (field.filter) {
                var errors = jsonschema.validate(value, field.filter).errors;
                if (errors.length) {
                    return false;
                }
            }
        }
    }
    return true;
};
exports.validateVcByInputDescriptor = validateVcByInputDescriptor;
//# sourceMappingURL=index.js.map