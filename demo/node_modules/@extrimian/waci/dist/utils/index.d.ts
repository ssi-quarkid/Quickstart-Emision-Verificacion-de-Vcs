import * as UUID from 'uuid';
import { CredentialApplication, CredentialPresentation, PresentationDefinition, WACIMessage } from '../types';
import { Callback } from '../callbacks';
export declare const getObjectValues: (object: any) => string[];
export declare const createUUID: (<T extends ArrayLike<number>>(options: UUID.V4Options, buffer: T, offset?: number) => T) & ((options?: UUID.V4Options) => string);
export declare const verifyPresentation: (presentationDefinition: PresentationDefinition, credentialApplication: CredentialApplication | CredentialPresentation, verificationCallback: Callback<any, {
    result: boolean;
    error?: string[];
}>) => Promise<any>;
export declare const extractExpectedChallenge: (presentationDefinitionMessage: WACIMessage) => string;
export declare const validateVcByInputDescriptor: (vc: any, inputDescriptor: any) => boolean;
