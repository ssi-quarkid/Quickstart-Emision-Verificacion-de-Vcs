"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GoalCode = exports.WACIMessageType = void 0;
var SharedMessageType;
(function (SharedMessageType) {
    SharedMessageType["OutOfBandInvitation"] = "https://didcomm.org/out-of-band/2.0/invitation";
})(SharedMessageType || (SharedMessageType = {}));
var IssuanceMessageType;
(function (IssuanceMessageType) {
    IssuanceMessageType["ProposeCredential"] = "https://didcomm.org/issue-credential/3.0/propose-credential";
    IssuanceMessageType["OfferCredential"] = "https://didcomm.org/issue-credential/3.0/offer-credential";
    IssuanceMessageType["RequestCredential"] = "https://didcomm.org/issue-credential/3.0/request-credential";
    IssuanceMessageType["IssueCredential"] = "https://didcomm.org/issue-credential/3.0/issue-credential";
    IssuanceMessageType["IssuanceAck"] = "https://didcomm.org/issue-credential/3.0/ack";
    IssuanceMessageType["ProblemReport"] = "https://didcomm.org/report-problem/2.0/problem-report";
})(IssuanceMessageType || (IssuanceMessageType = {}));
var PresentationMessageType;
(function (PresentationMessageType) {
    PresentationMessageType["ProposePresentation"] = "https://didcomm.org/present-proof/3.0/propose-presentation";
    PresentationMessageType["RequestPresentation"] = "https://didcomm.org/present-proof/3.0/request-presentation";
    PresentationMessageType["PresentProof"] = "https://didcomm.org/present-proof/3.0/presentation";
    PresentationMessageType["PresentationAck"] = "https://didcomm.org/present-proof/3.0/ack";
    PresentationMessageType["ProblemReport"] = "https://didcomm.org/report-problem/2.0/problem-report";
})(PresentationMessageType || (PresentationMessageType = {}));
exports.WACIMessageType = __assign(__assign(__assign({}, SharedMessageType), IssuanceMessageType), PresentationMessageType);
var GoalCode;
(function (GoalCode) {
    GoalCode["Issuance"] = "streamlined-vc";
    GoalCode["Presentation"] = "streamlined-vp";
})(GoalCode = exports.GoalCode || (exports.GoalCode = {}));
//# sourceMappingURL=waci-message.js.map