"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.OfferCredentialMessageResult = exports.ProposeCredentialHandler = void 0;
var register_handler_decorator_1 = require("../decorators/register-handler.decorator");
var types_1 = require("../../types");
var utils_1 = require("../../utils");
var callbacks_1 = require("../../callbacks");
var ProposeCredentialHandler = /** @class */ (function () {
    function ProposeCredentialHandler() {
    }
    ProposeCredentialHandler.prototype.handle = function (messageThread) {
        return __awaiter(this, void 0, void 0, function () {
            var message, holderDID, issuerDID, invitationId, credentialManifestParams, credentialManifest;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        message = messageThread[messageThread.length - 1];
                        holderDID = message.from;
                        issuerDID = message.to[0];
                        invitationId = message.pthid;
                        return [4 /*yield*/, callbacks_1.callbacks[types_1.Actor.Issuer].getCredentialManifest({
                                invitationId: invitationId,
                                holderDid: holderDID,
                                message: message,
                            })];
                    case 1:
                        credentialManifestParams = _a.sent();
                        credentialManifestParams.result =
                            credentialManifestParams.result || OfferCredentialMessageResult.Succeded;
                        if (credentialManifestParams.result == OfferCredentialMessageResult.Succeded) {
                            credentialManifest = this.createMessage(credentialManifestParams);
                            return [2 /*return*/, {
                                    responseType: 1 /* WACIMessageResponseType.ReplyThread */,
                                    message: {
                                        type: types_1.WACIMessageType.OfferCredential,
                                        id: (0, utils_1.createUUID)(),
                                        thid: message.id,
                                        from: issuerDID,
                                        to: [holderDID],
                                        body: {},
                                        attachments: credentialManifest,
                                    },
                                }];
                        }
                        else if (credentialManifestParams.result == OfferCredentialMessageResult.Failed) {
                            //TODO Return waci fail message if exist
                        }
                        return [2 /*return*/];
                }
            });
        });
    };
    ProposeCredentialHandler.prototype.createMessage = function (params) {
        var _a;
        var manifestId = (0, utils_1.createUUID)();
        var presentationDefinition = ((_a = params.input) === null || _a === void 0 ? void 0 : _a.length)
            ? {
                id: (0, utils_1.createUUID)(),
                input_descriptors: params.input,
                frame: params.frame,
            }
            : undefined;
        return [
            {
                id: (0, utils_1.createUUID)(),
                media_type: 'application/json',
                format: 'dif/credential-manifest/manifest@v1.0',
                data: {
                    json: {
                        options: {
                            challenge: (0, utils_1.createUUID)(),
                        },
                        credential_manifest: {
                            id: manifestId,
                            version: '0.1.0',
                            issuer: {
                                id: params.issuerDid,
                                name: params.issuerName,
                                styles: params.issuerStyles
                            },
                            presentation_definition: presentationDefinition,
                            output_descriptors: params.output.map(function (descriptors) { return descriptors.outputDescriptor; }),
                        },
                    },
                },
            },
            {
                id: (0, utils_1.createUUID)(),
                media_type: 'application/json',
                format: 'dif/credential-manifest/fulfillment@v1.0',
                data: {
                    json: {
                        '@context': [
                            'https://extrimian.blob.core.windows.net/rskec/credentialsv1.jsonld',
                            'https://extrimian.blob.core.windows.net/rskec/credential-manifestfulfillmentv1.jsonld',
                        ],
                        type: ['VerifiablePresentation', 'CredentialFulfillment'],
                        credential_fulfillment: {
                            id: (0, utils_1.createUUID)(),
                            manifest_id: manifestId,
                            descriptor_map: params.output.map(function (descriptor, index) {
                                return {
                                    id: descriptor.outputDescriptor.id,
                                    format: descriptor.format || 'ldp_vp',
                                    path: "$.verifiableCredential[".concat(index, "]"),
                                };
                            }),
                        },
                        verifiableCredential: params.output.map(function (vcData) { return vcData.verifiableCredential; }),
                    },
                },
            },
        ];
    };
    ProposeCredentialHandler = __decorate([
        (0, register_handler_decorator_1.RegisterHandler)(types_1.Actor.Issuer, types_1.WACIMessageType.ProposeCredential)
    ], ProposeCredentialHandler);
    return ProposeCredentialHandler;
}());
exports.ProposeCredentialHandler = ProposeCredentialHandler;
var OfferCredentialMessageResult;
(function (OfferCredentialMessageResult) {
    OfferCredentialMessageResult[OfferCredentialMessageResult["Succeded"] = 0] = "Succeded";
    OfferCredentialMessageResult[OfferCredentialMessageResult["Failed"] = 1] = "Failed";
    OfferCredentialMessageResult[OfferCredentialMessageResult["AsyncProcess"] = 2] = "AsyncProcess";
})(OfferCredentialMessageResult = exports.OfferCredentialMessageResult || (exports.OfferCredentialMessageResult = {}));
//# sourceMappingURL=step-3-propose-credential.handler.js.map