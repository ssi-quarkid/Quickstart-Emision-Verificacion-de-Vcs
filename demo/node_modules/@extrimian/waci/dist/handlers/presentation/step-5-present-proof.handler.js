"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __asyncValues = (this && this.__asyncValues) || function (o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PresentProofHandler = void 0;
var lodash_1 = require("lodash");
var register_handler_decorator_1 = require("../decorators/register-handler.decorator");
var types_1 = require("../../types");
var utils_1 = require("../../utils");
var callbacks_1 = require("../../callbacks");
var problem_report_1 = require("../../types/problem-report");
var PresentProofHandler = /** @class */ (function () {
    function PresentProofHandler() {
    }
    PresentProofHandler.prototype.handle = function (messageThread) {
        var _a, e_1, _b, _c;
        var _d, _e, _f;
        return __awaiter(this, void 0, void 0, function () {
            var messageToProcess, holderDID, verifierDID, problemReport, requestPresentationMessage, response, challengeToCheck, presentation, verifyPresentationResult, requests, submissionsToCheck, result, verificationResultCallback, vcs, _g, submissionsToCheck_1, submissionsToCheck_1_1, submissionToCheck, verify, _i, _h, vc, e_1_1;
            return __generator(this, function (_j) {
                switch (_j.label) {
                    case 0:
                        messageToProcess = messageThread[messageThread.length - 1];
                        holderDID = messageToProcess.from;
                        verifierDID = messageToProcess.to[0];
                        problemReport = new problem_report_1.ProblemReportMessage();
                        requestPresentationMessage = messageThread.find(function (message) { return message.type === types_1.WACIMessageType.RequestPresentation; });
                        response = {
                            responseType: 1 /* WACIMessageResponseType.ReplyThread */,
                            message: {
                                type: types_1.WACIMessageType.PresentationAck,
                                id: (0, utils_1.createUUID)(),
                                thid: messageToProcess.thid,
                                from: verifierDID,
                                to: [holderDID],
                                body: { status: undefined },
                            },
                        };
                        challengeToCheck = (0, utils_1.extractExpectedChallenge)(requestPresentationMessage);
                        presentation = (_f = (_e = (_d = messageToProcess === null || messageToProcess === void 0 ? void 0 : messageToProcess.attachments) === null || _d === void 0 ? void 0 : _d[0]) === null || _e === void 0 ? void 0 : _e.data) === null || _f === void 0 ? void 0 : _f.json;
                        return [4 /*yield*/, callbacks_1.callbacks[types_1.Actor.Verifier].verifyPresentation({ presentation: presentation, challenge: challengeToCheck })];
                    case 1:
                        verifyPresentationResult = _j.sent();
                        if (!verifyPresentationResult.result) {
                            //TO DO error codes from vc suite
                            return [2 /*return*/, {
                                    responseType: 1 /* WACIMessageResponseType.ReplyThread */,
                                    message: {
                                        type: types_1.WACIMessageType.ProblemReport,
                                        id: (0, utils_1.createUUID)(),
                                        thid: messageToProcess.id,
                                        from: verifierDID,
                                        to: [holderDID],
                                        body: problemReport.presentProofMessage(verifyPresentationResult.error.name, verifyPresentationResult.error.description),
                                    },
                                }];
                        }
                        requests = requestPresentationMessage.attachments.filter(function (attachment) { return !(0, lodash_1.isNil)(attachment.data.json.presentation_definition); });
                        submissionsToCheck = requests
                            .filter(function (request) { var _a, _b; return !(0, lodash_1.isNil)((_b = (_a = request === null || request === void 0 ? void 0 : request.data) === null || _a === void 0 ? void 0 : _a.json) === null || _b === void 0 ? void 0 : _b.presentation_definition); })
                            .map(function (request) { return ({
                            presentationDefinition: request.data.json.presentation_definition,
                            submission: messageToProcess.attachments.find(function (attachment) {
                                return attachment.data.json.presentation_submission.definition_id ===
                                    request.data.json.presentation_definition.id;
                            }),
                        }); });
                        result = false;
                        verificationResultCallback = callbacks_1.callbacks[types_1.Actor.Verifier].credentialVerificationResult;
                        vcs = [];
                        if (!submissionsToCheck.every(function (submissionToCheck) { return !(0, lodash_1.isNil)(submissionToCheck.submission); })) return [3 /*break*/, 17];
                        _j.label = 2;
                    case 2:
                        _j.trys.push([2, 10, 11, 16]);
                        _g = true, submissionsToCheck_1 = __asyncValues(submissionsToCheck);
                        _j.label = 3;
                    case 3: return [4 /*yield*/, submissionsToCheck_1.next()];
                    case 4:
                        if (!(submissionsToCheck_1_1 = _j.sent(), _a = submissionsToCheck_1_1.done, !_a)) return [3 /*break*/, 9];
                        _c = submissionsToCheck_1_1.value;
                        _g = false;
                        _j.label = 5;
                    case 5:
                        _j.trys.push([5, , 7, 8]);
                        submissionToCheck = _c;
                        return [4 /*yield*/, (0, utils_1.verifyPresentation)(submissionToCheck.presentationDefinition, submissionToCheck.submission, callbacks_1.callbacks[types_1.Actor.Verifier].verifyCredential)];
                    case 6:
                        verify = _j.sent();
                        result = verify.result;
                        for (_i = 0, _h = verify.vcs; _i < _h.length; _i++) {
                            vc = _h[_i];
                            vcs.push(vc);
                        }
                        if (!result) {
                            if (verificationResultCallback) {
                                verificationResultCallback({
                                    result: verify.result,
                                    error: verify.erorrs,
                                    thid: messageToProcess.thid,
                                    vcs: verify.vcs,
                                    message: messageToProcess,
                                });
                            }
                            return [2 /*return*/, {
                                    responseType: 1 /* WACIMessageResponseType.ReplyThread */,
                                    message: {
                                        type: types_1.WACIMessageType.ProblemReport,
                                        id: (0, utils_1.createUUID)(),
                                        thid: messageToProcess.id,
                                        from: verifierDID,
                                        to: [holderDID],
                                        body: problemReport.presentProofMessage(verify.error.name, verify.error.description),
                                    },
                                }];
                        }
                        return [3 /*break*/, 8];
                    case 7:
                        _g = true;
                        return [7 /*endfinally*/];
                    case 8: return [3 /*break*/, 3];
                    case 9: return [3 /*break*/, 16];
                    case 10:
                        e_1_1 = _j.sent();
                        e_1 = { error: e_1_1 };
                        return [3 /*break*/, 16];
                    case 11:
                        _j.trys.push([11, , 14, 15]);
                        if (!(!_g && !_a && (_b = submissionsToCheck_1.return))) return [3 /*break*/, 13];
                        return [4 /*yield*/, _b.call(submissionsToCheck_1)];
                    case 12:
                        _j.sent();
                        _j.label = 13;
                    case 13: return [3 /*break*/, 15];
                    case 14:
                        if (e_1) throw e_1.error;
                        return [7 /*endfinally*/];
                    case 15: return [7 /*endfinally*/];
                    case 16:
                        if (result) {
                            if (verificationResultCallback) {
                                verificationResultCallback({
                                    result: result,
                                    error: null,
                                    thid: messageToProcess.thid,
                                    vcs: vcs,
                                    message: messageToProcess,
                                });
                            }
                            response.message.body.status = "OK" /* AckStatus.Ok */;
                            return [2 /*return*/, response];
                        }
                        _j.label = 17;
                    case 17: return [2 /*return*/];
                }
            });
        });
    };
    PresentProofHandler = __decorate([
        (0, register_handler_decorator_1.RegisterHandler)(types_1.Actor.Verifier, types_1.WACIMessageType.PresentProof)
    ], PresentProofHandler);
    return PresentProofHandler;
}());
exports.PresentProofHandler = PresentProofHandler;
//# sourceMappingURL=step-5-present-proof.handler.js.map