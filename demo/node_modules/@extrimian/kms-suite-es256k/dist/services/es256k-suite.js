"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ES256kSuite = void 0;
var kms_core_1 = require("@extrimian/kms-core");
var ethers_1 = require("ethers");
var ES256kSuite = /** @class */ (function () {
    function ES256kSuite() {
    }
    ES256kSuite.prototype.verifySignature = function (originalContent, flatSignature, publicKey) {
        return __awaiter(this, void 0, void 0, function () {
            var address, publicKeyHex, pbkAddress;
            return __generator(this, function (_a) {
                address = ethers_1.ethers.utils.verifyMessage(originalContent, flatSignature);
                publicKeyHex = kms_core_1.BaseConverter.convert(publicKey, kms_core_1.Base.JWK, kms_core_1.Base.Hex);
                pbkAddress = this.publicKeyToAddress(publicKeyHex);
                return [2 /*return*/, pbkAddress == address];
            });
        });
    };
    ES256kSuite.prototype.publicKeyToAddress = function (publicKeyHex) {
        // Calcular el hash Keccak-256 de la clave pública (omitir el byte inicial '04' si está presente)
        var publicKeyHash = ethers_1.ethers.utils.keccak256(publicKeyHex);
        // Tomar los últimos 20 bytes (40 caracteres) del hash
        var addressBytes = publicKeyHash.slice(-40);
        // Convertir a una dirección Ethereum con checksum
        var address = ethers_1.ethers.utils.getAddress(addressBytes);
        return address;
    };
    ES256kSuite.prototype.load = function (secret) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                if (secret.privateKey) {
                    this.wallet = new ethers_1.Wallet(secret.privateKey);
                }
                else if (secret.mnemonic) {
                    this.wallet = ethers_1.Wallet.fromMnemonic(secret.mnemonic);
                }
                return [2 /*return*/];
            });
        });
    };
    ES256kSuite.prototype.create = function (params) {
        var _a;
        return __awaiter(this, void 0, void 0, function () {
            var lang, key;
            return __generator(this, function (_b) {
                lang = (_a = params === null || params === void 0 ? void 0 : params.lang) !== null && _a !== void 0 ? _a : kms_core_1.LANG.es;
                switch (lang) {
                    case kms_core_1.LANG.es:
                        this.wallet = ethers_1.ethers.Wallet.createRandom({ locale: ethers_1.wordlists.es });
                        break;
                    case kms_core_1.LANG.en:
                        this.wallet = ethers_1.ethers.Wallet.createRandom({ locale: ethers_1.wordlists.en });
                        break;
                    case kms_core_1.LANG.fr:
                        this.wallet = ethers_1.ethers.Wallet.createRandom({ locale: ethers_1.wordlists.fr });
                        break;
                    case kms_core_1.LANG.it:
                        this.wallet = ethers_1.ethers.Wallet.createRandom({ locale: ethers_1.wordlists.it });
                        break;
                }
                key = this.wallet._signingKey();
                return [2 /*return*/, {
                        privateKey: key.privateKey,
                        publicKey: key.publicKey,
                        curve: key.curve,
                        mnemonic: this.wallet.mnemonic.phrase,
                    }];
            });
        });
    };
    ES256kSuite.prototype.sign = function (content) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!this.wallet)
                            throw new Error("Cannot sign content because wallet was not initialized with secrets.");
                        return [4 /*yield*/, this.wallet.signMessage(content)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    ES256kSuite = __decorate([
        (0, kms_core_1.suiteDecorator)(kms_core_1.Suite.ES256k),
        __metadata("design:paramtypes", [])
    ], ES256kSuite);
    return ES256kSuite;
}());
exports.ES256kSuite = ES256kSuite;
//# sourceMappingURL=es256k-suite.js.map