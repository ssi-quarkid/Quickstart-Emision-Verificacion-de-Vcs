import { VerificationMethodGpg, VerificationMethodJwk, VerificationMethodPublicKey58, VerificationMethodTypes } from "./verification-method";
import { Service } from "./service";
export interface DIDDocument {
    "@context": string | string[] | undefined | null;
    id: string;
    verificationMethod: Array<VerificationMethodPublicKey58 | VerificationMethodGpg | VerificationMethodJwk>;
    authentication: Array<string | VerificationMethodPublicKey58 | VerificationMethodGpg | VerificationMethodJwk>;
    assertionMethod: Array<string | VerificationMethodPublicKey58 | VerificationMethodGpg | VerificationMethodJwk>;
    keyAgreement: Array<string | VerificationMethodPublicKey58 | VerificationMethodGpg | VerificationMethodJwk>;
    capabilityDelegation: Array<string | VerificationMethodPublicKey58 | VerificationMethodGpg | VerificationMethodJwk>;
    capabilityInvocation: Array<string | VerificationMethodPublicKey58 | VerificationMethodGpg | VerificationMethodJwk>;
    service?: Array<Service>;
}
export interface DIDDocumentMetadata {
    document: DIDDocument;
    metadata: any;
}
export declare class DIDDocumentUtils {
    static getServiceUrl(didDocument: DIDDocument, serviceType: string, serviceEndpointMapKey?: string): string[];
    static getVerificationMethodsByType(didDocument: DIDDocument, verificationMethodType: VerificationMethodTypes): Array<VerificationMethodPublicKey58 | VerificationMethodGpg | VerificationMethodJwk>;
    static getVerificationMethodById(didDocument: DIDDocument, verificationMethodId: string): VerificationMethodPublicKey58 | VerificationMethodGpg | VerificationMethodJwk;
}
