import { IVCJsonLDKeyPair, IVCSuite } from "@extrimian/kms-core";
import { DIDDocument, Purpose, VerificationMethod } from "@extrimian/did-core";
export declare abstract class JsonLDSuite implements IVCSuite {
    protected didDocumentResolver: (did: string) => Promise<DIDDocument>;
    contextDictionary: {
        key: string;
        value: string;
    }[];
    private cache;
    private useCache;
    protected secret?: IVCJsonLDKeyPair;
    customDocLoader: (url: string) => Promise<any>;
    documentLoader: any;
    constructor();
    loadSuite(params: {
        secrets: IVCJsonLDKeyPair;
        useCache: boolean;
    }): void;
    abstract create(): Promise<IVCJsonLDKeyPair>;
    sign(documentToSign: any, controllerDid: string, verificationMethodId: string, purpuse: Purpose): Promise<any>;
    protected abstract getSuite(params?: {
        verificationMethodId: string;
        controllerDid: string;
    }): Promise<any>;
    verify(data: string, purpose: Purpose): Promise<boolean>;
    private cacheGetter;
    private getPurpose;
    vmConvertions(vm: VerificationMethod): VerificationMethod;
    protected getVerificationMethod<TVerificationMethod extends VerificationMethod = VerificationMethod>(vmId: string): Promise<TVerificationMethod>;
}
