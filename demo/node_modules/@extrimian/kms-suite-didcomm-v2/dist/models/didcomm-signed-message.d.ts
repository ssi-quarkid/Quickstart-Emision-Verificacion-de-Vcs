import { JWE } from 'did-jwt';
import { DIDCommMessageMediaType, IDIDCommMessage } from './didcomm-message-media-type';
/**
 * Represents a plaintext DIDComm v2 message object.
 * @internal
 */
export declare type _DIDCommPlainMessage = IDIDCommMessage & {
    typ: DIDCommMessageMediaType.PLAIN;
};
/**
 * Represents an encrypted DIDComm v2 message object
 * @internal
 */
export declare type _DIDCommEncryptedMessage = JWE;
/**
 * Type definition of a JSON serialized JWS in flattened form (only one signer)
 * @internal
 */
export declare type _FlattenedJWS = {
    payload: string;
    protected?: string;
    header?: Record<string, any>;
    signature: string;
};
/**
 * Type definition of a JSON serialized JWS in generic form
 * @internal
 */
export declare type _GenericJWS = {
    payload: string;
    signatures: [{
        protected?: string;
        header?: Record<string, any>;
        signature: string;
    }];
};
/**
 * Composite type representing the 2 accepted forms of JWS DIDComm v2 message
 * @internal
 */
export declare type _DIDCommSignedMessage = _FlattenedJWS | _GenericJWS;
