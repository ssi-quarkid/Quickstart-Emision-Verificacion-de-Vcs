"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.VCUnexpectedError = exports.VerifiableCredentialExpired = exports.CredentialStatusServiceError = exports.VerifiableCredentialSuspended = exports.VerifiableCredentialRevoked = exports.AuthenticationPurposeChallengeRequired = exports.UnexpectedChallengeError = exports.VerificationRelationshipError = exports.VerificationMethodNotFound = exports.InvalidSignatureError = exports.UnhandledVCSuiteError = exports.DIDDocumentResolutionError = exports.VCSuiteError = exports.VCSuiteErrorCode = void 0;
var VCSuiteErrorCode;
(function (VCSuiteErrorCode) {
    VCSuiteErrorCode[VCSuiteErrorCode["DIDDocumentResolutionError"] = 11] = "DIDDocumentResolutionError";
    VCSuiteErrorCode[VCSuiteErrorCode["InvalidSignatureError"] = 12] = "InvalidSignatureError";
    VCSuiteErrorCode[VCSuiteErrorCode["VerificationMethodNotFound"] = 13] = "VerificationMethodNotFound";
    VCSuiteErrorCode[VCSuiteErrorCode["VerificationRelationshipError"] = 14] = "VerificationRelationshipError";
    VCSuiteErrorCode[VCSuiteErrorCode["AuthenticationPurposeChallengeRequired"] = 15] = "AuthenticationPurposeChallengeRequired";
    VCSuiteErrorCode[VCSuiteErrorCode["UnexpectedChallenge"] = 16] = "UnexpectedChallenge";
    VCSuiteErrorCode[VCSuiteErrorCode["VerifiableCredentialRevoked"] = 21] = "VerifiableCredentialRevoked";
    VCSuiteErrorCode[VCSuiteErrorCode["VerifiableCredentialSuspended"] = 22] = "VerifiableCredentialSuspended";
    VCSuiteErrorCode[VCSuiteErrorCode["CredentialStatusServiceError"] = 23] = "CredentialStatusServiceError";
    VCSuiteErrorCode[VCSuiteErrorCode["VerifiableCredentialExpired"] = 24] = "VerifiableCredentialExpired";
    VCSuiteErrorCode[VCSuiteErrorCode["UnhandledVCSuiteError"] = 99] = "UnhandledVCSuiteError";
})(VCSuiteErrorCode = exports.VCSuiteErrorCode || (exports.VCSuiteErrorCode = {}));
var VCSuiteError = /** @class */ (function () {
    function VCSuiteError(description) {
        this.description = description;
    }
    return VCSuiteError;
}());
exports.VCSuiteError = VCSuiteError;
var DIDDocumentResolutionError = /** @class */ (function (_super) {
    __extends(DIDDocumentResolutionError, _super);
    function DIDDocumentResolutionError(did) {
        var _this = _super.call(this, "DID Document can't be resolved: ".concat(did)) || this;
        _this.did = did;
        _this.code = VCSuiteErrorCode.DIDDocumentResolutionError;
        _this.name = "did-document-resolution-error";
        _this.did = did;
        return _this;
    }
    return DIDDocumentResolutionError;
}(VCSuiteError));
exports.DIDDocumentResolutionError = DIDDocumentResolutionError;
var UnhandledVCSuiteError = /** @class */ (function (_super) {
    __extends(UnhandledVCSuiteError, _super);
    function UnhandledVCSuiteError(messageError) {
        var _this = _super.call(this, messageError) || this;
        _this.messageError = messageError;
        _this.code = VCSuiteErrorCode.UnhandledVCSuiteError;
        _this.name = "unhandled-vc-suite-error";
        return _this;
    }
    return UnhandledVCSuiteError;
}(VCSuiteError));
exports.UnhandledVCSuiteError = UnhandledVCSuiteError;
var InvalidSignatureError = /** @class */ (function (_super) {
    __extends(InvalidSignatureError, _super);
    function InvalidSignatureError() {
        var _this = _super.call(this, "Verifiable Credential signature is invalid or verification method is wrong") || this;
        _this.code = VCSuiteErrorCode.InvalidSignatureError;
        _this.name = "vc-invalid-signature";
        return _this;
    }
    return InvalidSignatureError;
}(VCSuiteError));
exports.InvalidSignatureError = InvalidSignatureError;
var VerificationMethodNotFound = /** @class */ (function (_super) {
    __extends(VerificationMethodNotFound, _super);
    function VerificationMethodNotFound(verificationMethod, did) {
        var _this = _super.call(this, "The verification method ".concat(verificationMethod, " not found in DID Document: ").concat(did)) || this;
        _this.verificationMethod = verificationMethod;
        _this.did = did;
        _this.code = VCSuiteErrorCode.VerificationMethodNotFound;
        _this.name = "verification-method-not-found";
        return _this;
    }
    return VerificationMethodNotFound;
}(VCSuiteError));
exports.VerificationMethodNotFound = VerificationMethodNotFound;
var VerificationRelationshipError = /** @class */ (function (_super) {
    __extends(VerificationRelationshipError, _super);
    function VerificationRelationshipError(verificationMethod, expectedVerificationRelationship) {
        var _this = _super.call(this, "The verification method ".concat(verificationMethod, " is not configured as ").concat(expectedVerificationRelationship)) || this;
        _this.verificationMethod = verificationMethod;
        _this.expectedVerificationRelationship = expectedVerificationRelationship;
        _this.code = VCSuiteErrorCode.VerificationRelationshipError;
        _this.name = "verification-relationship-invalid";
        return _this;
    }
    return VerificationRelationshipError;
}(VCSuiteError));
exports.VerificationRelationshipError = VerificationRelationshipError;
var UnexpectedChallengeError = /** @class */ (function (_super) {
    __extends(UnexpectedChallengeError, _super);
    function UnexpectedChallengeError(errorMessage) {
        var _this = _super.call(this, errorMessage) || this;
        _this.errorMessage = errorMessage;
        _this.code = VCSuiteErrorCode.UnexpectedChallenge;
        _this.name = "unexpected-challenge";
        return _this;
    }
    return UnexpectedChallengeError;
}(VCSuiteError));
exports.UnexpectedChallengeError = UnexpectedChallengeError;
var AuthenticationPurposeChallengeRequired = /** @class */ (function (_super) {
    __extends(AuthenticationPurposeChallengeRequired, _super);
    function AuthenticationPurposeChallengeRequired() {
        var _this = _super.call(this, "Authentication purpose require a challenge to create proofs and verify") || this;
        _this.code = VCSuiteErrorCode.AuthenticationPurposeChallengeRequired;
        _this.name = "authentication-purpose-challenge-required";
        return _this;
    }
    return AuthenticationPurposeChallengeRequired;
}(VCSuiteError));
exports.AuthenticationPurposeChallengeRequired = AuthenticationPurposeChallengeRequired;
var VerifiableCredentialRevoked = /** @class */ (function (_super) {
    __extends(VerifiableCredentialRevoked, _super);
    function VerifiableCredentialRevoked(errors) {
        var _this = _super.call(this) || this;
        _this.errors = errors;
        _this.code = VCSuiteErrorCode.VerifiableCredentialRevoked;
        _this.name = "verifiable-credential-revoked";
        return _this;
    }
    return VerifiableCredentialRevoked;
}(VCSuiteError));
exports.VerifiableCredentialRevoked = VerifiableCredentialRevoked;
var VerifiableCredentialSuspended = /** @class */ (function (_super) {
    __extends(VerifiableCredentialSuspended, _super);
    function VerifiableCredentialSuspended(errors) {
        var _this = _super.call(this) || this;
        _this.errors = errors;
        _this.code = VCSuiteErrorCode.VerifiableCredentialSuspended;
        _this.name = "verifiable-credential-suspended";
        return _this;
    }
    return VerifiableCredentialSuspended;
}(VCSuiteError));
exports.VerifiableCredentialSuspended = VerifiableCredentialSuspended;
var CredentialStatusServiceError = /** @class */ (function (_super) {
    __extends(CredentialStatusServiceError, _super);
    function CredentialStatusServiceError(endpoint, httpStatusResult, dataResult) {
        var _this = _super.call(this, "Error retrieving information on credential status service with endpoint: ".concat(endpoint)) || this;
        _this.endpoint = endpoint;
        _this.httpStatusResult = httpStatusResult;
        _this.dataResult = dataResult;
        _this.code = VCSuiteErrorCode.CredentialStatusServiceError;
        _this.name = "credential-status-service-error";
        return _this;
    }
    return CredentialStatusServiceError;
}(VCSuiteError));
exports.CredentialStatusServiceError = CredentialStatusServiceError;
var VerifiableCredentialExpired = /** @class */ (function (_super) {
    __extends(VerifiableCredentialExpired, _super);
    function VerifiableCredentialExpired() {
        var _this = _super.call(this, "Expired Credential") || this;
        _this.code = VCSuiteErrorCode.VerifiableCredentialExpired;
        _this.name = "verifiable-credential-expired";
        return _this;
    }
    return VerifiableCredentialExpired;
}(VCSuiteError));
exports.VerifiableCredentialExpired = VerifiableCredentialExpired;
var VCUnexpectedError = /** @class */ (function (_super) {
    __extends(VCUnexpectedError, _super);
    function VCUnexpectedError(ex) {
        return _super.call(this, "VC Suite unexpected error: " + JSON.stringify(ex)) || this;
    }
    return VCUnexpectedError;
}(Error));
exports.VCUnexpectedError = VCUnexpectedError;
//# sourceMappingURL=error-code.js.map