import { Container } from "inversify";
import { ICommand } from "../cqrs/icommand";
import { ICommandHandler } from "../cqrs/icommand.handler";
export declare class DIService {
    static container: Container;
    static addCommand<TResult, TCommand extends ICommand<TResult>, TCommandHandler extends ICommandHandler<TCommand, TResult>>(command: new (...args: never[]) => TCommand, handler: new (...args: never[]) => TCommandHandler): void;
    static addSymbol<TResult, TCommand extends ICommand<TResult>, TCommandHandler extends ICommandHandler<TCommand, TResult>>(symbol: symbol, handler: new (...args: never[]) => TCommandHandler): void;
}
